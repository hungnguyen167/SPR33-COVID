swiid_summary <- aggregate(swiid_summary, by = list(swiid_summary$cow), FUN = mean, na.rm = T)
gini_disp <- select(swiid_summary, cow, gini_disp)
rm(swiid_summary)
df <- left_join(issp16dfa, gov_resp1, by = "cow")
df <- left_join(df, gov_resp2, by = "cow")
df <- left_join(df, gov_resp3, by = "cow")
df <- left_join(df, betrack_av, by = "cow")
df <- left_join(df, dpm_stage1, by = "cow")
df <- left_join(df, dpm_stage2, by = "cow")
df <- left_join(df, dpm_stage3, by = "cow")
df <- left_join(df, gini_disp, by = "cow")
df <- left_join(df, gdp, by = "cow")
df <- left_join(df, socp, by = "cow")
## filter out Suriname
df <- df[-which(df$cow==115),]
m11 <- lm(chi1 ~ gov_author, data = df)
m12 <- lm(chi1 ~ gov_author + dpm1, data = df)
m13 <- lm(chi1 ~ gov_author + dpm1 + gini_disp, data = df)
m14 <- lm(chi1 ~ gov_author + dpm1 + gini_disp + soc_spend, data = df)
m15 <- lm(chi1 ~ gov_author + dpm1 + gini_disp + soc_spend + gdp, data = df)
df$chi1_pa <- predict.lm(m11, newdata = df)
df$gap1a <- round(df$chi1 - df$chi1_pa,3)
m21 <- lm(behave ~  gap1a , data = df)
m22 <- lm(behave  ~  gap1a + chi2, data = df)
m23 <- lm(behave  ~ gap1a + chi2 + dpm2 , data = df)
m24 <- lm(behave  ~ gap1a + chi2 + dpm2 + gini_disp, data = df)
m25 <- lm(behave ~ gap1a + chi2 + dpm2 + gini_disp + soc_spend, data = df)
m26 <- lm(behave ~ gap1a + chi2 + dpm2 + gini_disp + soc_spend  + gdp, data = df)
tab_model(m21, m22, m23, m24, m25, m26, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M21", "M22","M23", "M24","M25", "M26"), pred.labels = c("Intercept", "Discrepancy Score - Outbreak Stage", "Government Intervention - Public Reaction Stage", "Deaths per Million",   "Disposable Income Inequality", "Social Spending", "GDP (k$, per capita)"),show.aic = TRUE, show.std = TRUE)
## A categorical variable of the discrepancy score.
df$gap1a_cat <- as.factor(ifelse(df$gap1a > 0, 1, 0))
m31 <- lm(behave ~ gap1a_cat , data = df)
m32 <- lm(behave  ~ gap1a_cat + chi2, data = df)
m33 <- lm(behave  ~ gap1a_cat + chi2 + dpm2, data = df)
m34 <- lm(behave ~ gap1a_cat + chi2 + dpm2 + gini_disp, data = df)
m35 <- lm(behave ~ gap1a_cat + chi2 + dpm2 + gini_disp + soc_spend, data = df)
m36 <- lm(behave ~ gap1a_cat + chi2 + dpm2 + gini_disp + soc_spend + gdp, data = df)
tab_model(m31, m32, m33, m34, m35, m36, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M31", "M32","M33", "M34","M35", "M36"), pred.labels = c("Intercept", "Positive Discrepancy from Outbreak Stage", "Current Gov. Intervention", "Deaths per Million", "Disposable Income Inequality", "Social Spending", "GDP (k$, per capita)"))
m4a <- lm(chi3 ~ gov_author, data = df)
df$chi3_p <- predict.lm(m4a, newdata = df)
df$gap2 <- df$chi3 - df$chi3_p
m41 <- lm(behave ~ gap2, data = df)
m42 <- lm(behave ~ gap2 + chi2, data = df)
m43 <- lm(behave ~ gap2 + chi2 + dpm2 , data = df)
m44 <- lm(behave ~ gap2 + chi2 + dpm2 + gini_disp , data = df)
m45 <- lm(behave ~ gap2 + chi2 + dpm2 + gini_disp + soc_spend, data = df)
m46 <- lm(behave ~ gap2 + chi2 + dpm2 + gini_disp + soc_spend + gdp, data = df)
tab_model(m41, m42, m43, m44, m45, m46, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M41", "M42","M43", "M44","M45", "M46"), pred.labels = c("Intercept", "Discrepancy Score - Outbreak Stage", "Government Intervention - Public Reaction Stage", "Deaths per Million", "Disposable Income Inequality (Gini)", "Social Spending", "GDP (k$, per capita)"), show.aic = TRUE)
df$cooksd <- cooks.distance(m24)
df$influential <- ifelse(df$cooksd < (4/nrow(df)), "F", "T")
df[which(df$influential == "T"),]$cow
df_new <- df[-which(df$cow == 344),]
m51 <- lm(behave ~ gap1a, data = df_new)
m52 <- lm(behave ~ gap1a + chi2, data = df_new)
m53 <- lm(behave ~ gap1a + chi2 + dpm2, data = df_new)
m54 <- lm(behave ~ gap1a + chi2 + dpm2 + gini_disp, data = df_new)
m55 <- lm(behave ~ gap1a + chi2 + dpm2 + gini_disp + soc_spend, data = df_new)
m56 <- lm(behave ~ gap1a + chi2 + dpm2 + gini_disp + soc_spend + gdp, data = df_new)
tab_model(m51, m52, m53, m54, m55, m56, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M51", "M52","M53", "M54","M55", "M56"), pred.labels = c("Intercept", "Discrepancy Score - Outbreak Stage", "Government Intervention - Public Reaction Stage", "Deaths per Million", "Disposable Income Inequality (Gini)", "Social Spending", "GDP (k$, per capita)"), show.aic =TRUE)
wdir <- function(x){
paste(getwd(),x, sep = "/")
}
# need pacman package installed to run this
# install.packages("pacman")
pacman::p_load("dplyr","countrycode","car","ggplot2","jtools","sjPlot","sjmisc","sjlabelled","tidyverse","psych","lavaan","kableExtra","ggrepel","stringi","margins","readxl","semPlot","htmlTable", "countrycode","haven","semTable","ragg")
# COVID-19 Survey
betrack <- read_dta(wdir("data/GlobalBehaviorsPerceptions_Data_May21_2020.dta"))
# government response
gov_resp <- read.csv(file = wdir("data/OxCGRT_latest.csv"), header = T)
# ISSP RoG
issp16 <- read_dta(wdir("data/ZA6900_v2-0-0.dta"))
# Solt Gini
swiid <- load(wdir("data/swiid9_0.rda"))
# Death per million
covid <- read.csv(file = wdir("data/owid-covid-data.csv"), header = T)
## GDP per capita (2019)
gdp <- read.csv(file = wdir("data/GDP per capita WB.csv"), header = T,skip = 4)
## Social Spending
socp <- read_xlsx(wdir("data/54614.xlsx"), skip = 5, sheet = 1)
# recode all questions so that higher values indicate support for government intervention
issp16 <- issp16 %>%
mutate(
cut_spend = car::recode(as.numeric(v7), '8=NA;9=NA'),
spend_jobs = car::recode(as.numeric(v8), '1=5;2=4;3=3;4=2;5=1;else=NA'),
reg_biz = car::recode(as.numeric(v9), '8=NA;9=NA'),
sup_ind = car::recode(as.numeric(v10), '1=5;2=4;3=3;4=2;5=1;else=NA'),
sup_ind2 = car::recode(as.numeric(v11), '1=5;2=4;3=3;4=2;5=1;else=NA'),
gov_jobs = car::recode(as.numeric(v21), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_prices = car::recode(as.numeric(v22), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_health = car::recode(as.numeric(v23), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_old = car::recode(as.numeric(v24), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_ind3 = car::recode(as.numeric(v25), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_unemp = car::recode(as.numeric(v26), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_incd = car::recode(as.numeric(v27), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_house = car::recode(as.numeric(v29), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_laws = car::recode(as.numeric(v30), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_surveil = car::recode(as.numeric(v38), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_surveil2 = car::recode(as.numeric(v39), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_open = car::recode(as.numeric(v40), '10=5;9=4.5;8=4;7=3.5;6=3.5;5=3;4=2.5;3=2.5;2=2;1=1.5;0=1;else=NA'),
gov_secure = car::recode(as.numeric(v41), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_detain = car::recode(as.numeric(v43), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_surveil3 = car::recode(as.numeric(v44), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_surveil4 = car::recode(as.numeric(v45), '1=5;2=4;8=3;3=2;4=1;else=NA'),
gov_nosay = car::recode(as.numeric(v47), '1=5;2=4;3=3;4=2;5=1;else=NA'),
cntry = as.numeric(country),
cow = countrycode(cntry, origin = "iso3n", destination = "cown"),
wave = 2016
)%>%
arrange(cow)
issp16df <- select(issp16, cow, wave, cut_spend:gov_nosay)
issp16_meain <- issp16df[complete.cases(issp16df),]
# check measurement invariance - ISSP 2016
meaInmod1a <- "
preference =~ gov_surveil + gov_surveil2 + gov_secure"
meaInmod1b <- "
intervene_security =~ 1*gov_surveil + 1.174*gov_surveil2 + 0.933*gov_secure
gov_surveil2 ~~ c(a,a,a,b,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a)*gov_secure
"
cfa <- cfa(model = meaInmod1a, data = issp16_meain)
summary(cfa,standardized = TRUE, fit.measures = TRUE)
configural1a <- cfa(model = meaInmod1a, data = issp16_meain, group = "cow")
fitmeasures(configural1a)
metric1a <- cfa(model = meaInmod1a, data = issp16_meain, group = "cow", group.equal = "loadings")
fitmeasures(metric1a)
metric1b <- cfa(model = meaInmod1b, data = issp16_meain, group = "cow")
fitmeasures(metric1b)
# create an authoritarian scale (just the surveillance/personal freedom items).
issp16_meain$gov_author <- round((issp16_meain$gov_surveil +
1.174*issp16_meain$gov_surveil2 +
0.933*issp16_meain$gov_secure)/3,2)
issp16dfa <- round(aggregate(issp16_meain, by = list(issp16_meain$cow), FUN = mean, na.rm = T),2)
issp16dfa <- dplyr::select(issp16dfa, cow, gov_author)
T_cfa <- semTable(list("Baseline" = cfa), type = "html", file = "results/T_cfa.html", print.results = F)
T_cfa2 <- semTable(list("Configural" = configural1a), type = "html", file = "results/T_cfa2.html", print.results = F)
T_cfa3 <- semTable(list("Metric" = metric1a), type = "html", file = "results/T_cfa3.html", print.results = F)
T_cfa4 <- semTable(list("Metric" = metric1b), type = "html", file = "results/T_cfa4.html", print.results = F)
# Create table comparing fit statistics
tbl_issp_fit <- matrix(nrow = 7, ncol = 5)
colnames(tbl_issp_fit) <- c("Fit Index","Baseline","Configural","Metric","Metric X")
tbl_issp_fit[1:7,1] <- c("Chi-square", "df","RMSEA","CFI","TLI","AIC","LL")
fitfunc <- function (x) {
y <- summary(x, fit.measures = T)
c(round(y[["FIT"]][["chisq"]],3), round(y[["FIT"]][["df"]],3), round(y[["FIT"]][["rmsea"]],3), round(y[["FIT"]][["cfi"]],3), round(y[["FIT"]][["tli"]],3), round(y[["FIT"]][["aic"]],0), round(y[["FIT"]][["logl"]],0))
}
tbl_issp_fit[1:7,2] <- c(fitfunc(cfa))
tbl_issp_fit[1:7,3] <- c(fitfunc(configural1a))
tbl_issp_fit[1:7,4] <- c(fitfunc(metric1a))
tbl_issp_fit[1:7,5] <- c(fitfunc(metric1b))
tbl_issp_fit <- as.data.frame(tbl_issp_fit)
htmlTable(tbl_issp_fit)
betrack <- betrack %>%
mutate(
cow = countrycode(iso2c, origin = "iso2c", destination = "cown"),
stay = scale(beh_stayhome),
gather = scale(beh_socgathering),
distance = scale(beh_distance),
tsymp = scale(beh_tellsymp),
hwash = scale(beh_handwash)
) %>%
select(cow, date, stay, gather, distance, tsymp, hwash)
## Select only those countries in the ISSP
betrack_complete <- betrack[complete.cases(betrack),]
betrack_complete <- betrack_complete[which(betrack_complete$cow %in% issp16df$cow),]
betrack_complete <- betrack_complete[-which(betrack_complete$cow == 115),]
meaInmod2 <- "
behave =~ stay + gather + distance
"
cfa2 <- cfa(model = meaInmod2, data = betrack_complete)
configural2 <- cfa(model = meaInmod2, data = betrack_complete, group = "cow")
metric2a <- cfa(model = meaInmod2, data = betrack_complete, group = "cow", group.equal = "loadings")
# summary(metric2a, fit.measures = T)
meaInmod2b <- "
behave =~ 1*stay + 0.776*gather + 1.083*distance
stay ~~ c(a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,b,a,a,a,a,a,a,a,a)*gather
"
metric2b <- cfa(model = meaInmod2b, data = betrack_complete, group = "cow")
## Create the "behave" variable
betrack_complete$behave <- round((betrack_complete$stay + 0.776*betrack_complete$gather + 1.083*betrack_complete$distance)/3,2)
## Take the Country-Average
betrack_av <- round(aggregate(betrack_complete[,-2], by = list(betrack_complete$cow), FUN = mean, na.rm = T),2)
## Now create a standardized score at the country level
betrack_av <- betrack_av %>%
mutate(
behave = scale(behave)
) %>%
filter(cow %in% issp16dfa$cow) %>%
select(cow, behave)
T_cfa <- semTable(list("Baseline" = cfa2), type = "html", file = "results/T_cfa_beh.html", print.results = F)
T_cfa2 <- semTable(list("Configural" = configural2), type = "html", file = "results/T_cfa2_beh.html", print.results = F)
T_cfa3 <- semTable(list("Metric" = metric2a), type = "html", file = "results/T_cfa3_beh.html", print.results = F)
T_cfa4 <- semTable(list("Metric" = metric2b), type = "html", file = "results/T_cfa4_beh.html", print.results = F)
# Create table comparing fit statistics
tbl_issp_fit2 <- matrix(nrow = 7, ncol = 5)
colnames(tbl_issp_fit2) <- c("Fit Index","Baseline","Configural","Metric","Metric X")
tbl_issp_fit2[1:7,1] <- c("Chi-square", "df","RMSEA","CFI","TLI","AIC","LL")
tbl_issp_fit2[1:7,2] <- c(fitfunc(cfa2))
tbl_issp_fit2[1:7,3] <- c(fitfunc(configural2))
tbl_issp_fit2[1:7,4] <- c(fitfunc(metric2a))
tbl_issp_fit2[1:7,5] <- c(fitfunc(metric2b))
tbl_issp_fit2 <- as.data.frame(tbl_issp_fit2)
htmlTable(tbl_issp_fit2)
covid <- covid %>%
mutate(
dpm = total_deaths_per_million, # deaths per million
cow = countrycode(location, origin = "country.name", destination = "cown"),
) %>%
select(cow, date, dpm) %>%
filter(cow %in% issp16df$cow)
##  Outbreak Stage (01/03 - 15/03)
dpm_stage1 <- filter(covid, covid$date >= "2020-03-01" & covid$date <= "2020-03-15")
dpm_stage1 <- round(aggregate(dpm_stage1[,-2], by = list(dpm_stage1$cow), FUN = mean, na.rm = TRUE),4)
dpm_stage1$dpm1 <- ifelse(is.nan(dpm_stage1$dpm), 0, dpm_stage1$dpm)
dpm_stage1 <- select(dpm_stage1, cow, dpm1)
## Public Reaction Stage (20/03 - 07/04)
dpm_stage2 <- filter(covid, covid$date >= "2020-03-20" & covid$date <= "2020-04-07")
dpm_stage2 <- round(aggregate(dpm_stage2[,-2], by = list(dpm_stage2$cow), FUN = mean, na.rm = TRUE),4)
dpm_stage2$dpm2 <- ifelse(is.nan(dpm_stage2$dpm), 0, dpm_stage2$dpm)
dpm_stage2 <- select(dpm_stage2, cow, dpm2)
## Sensitivity Analysis - Outbreak Stage: March 1st to March 19th
dpm_stage3 <- filter(covid, covid$date >= "2020-03-01" & covid$date <= "2020-03-19")
dpm_stage3 <- round(aggregate(dpm_stage3[,-2], by = list(dpm_stage3$cow), FUN = mean, na.rm = TRUE),4)
dpm_stage3$dpm3 <- ifelse(is.nan(dpm_stage3$dpm), 0, dpm_stage3$dpm)
dpm_stage3 <- select(dpm_stage3, cow, dpm3)
## Outbreak Stage: March 1st to March 15th
gov_resp1 <- gov_resp %>%
mutate(
date = as.Date(as.character(Date), "%Y%m%d"),
chi = ContainmentHealthIndex/20,
cow = countrycode(CountryName, origin = "country.name", destination = "cown")
) %>%
filter(date >= "2020-03-01" & date <= "2020-03-15" & cow %in% issp16dfa$cow) %>%
select(CountryName, date, chi)
gov_resp1 <- aggregate(x = gov_resp1[,-2], by = list(gov_resp1$CountryName), FUN = mean)
gov_resp1 <- gov_resp1 %>%
mutate(
cname = Group.1,
cow = countrycode(cname, origin = "country.name", destination = "cown"),
chi1 = round(scale(chi),2),
chi1.2 = round(chi,2)
) %>%
select(cow, chi1, chi1.2) %>%
arrange(cow)
## Public Reaction Stage: March 20th to April 7th
gov_resp2 <- gov_resp %>%
mutate(
date = as.Date(as.character(Date), "%Y%m%d"),
chi = ContainmentHealthIndex/20,
cow = countrycode(CountryName, origin = "country.name", destination = "cown")
) %>%
filter(date >= "2020-03-20" & date <= "2020-04-07" & cow %in% issp16dfa$cow) %>%
select(CountryName, date, chi)
gov_resp2 <- aggregate(x = gov_resp2[,-2], by = list(gov_resp2$CountryName), FUN = mean)
gov_resp2 <- gov_resp2 %>%
mutate(
cname = Group.1,
cow = countrycode(cname, origin = "country.name", destination = "cown"),
chi2 = round(scale(chi),2),
chi2.2 = round(chi,2)
) %>%
select(cow, chi2, chi2.2) %>%
arrange(cow)
## Sensitivity Analysis - Reaction Stage: March 1st to March 19th
gov_resp3 <- gov_resp %>%
mutate(
date = as.Date(as.character(Date), "%Y%m%d"),
chi = ContainmentHealthIndex/20,
cow = countrycode(CountryName, origin = "country.name", destination = "cown")
) %>%
filter(date >= "2020-03-01" & date <= "2020-03-19" & cow %in% issp16dfa$cow) %>%
select(CountryName, date, chi)
gov_resp3 <- aggregate(x = gov_resp3[,-2], by = list(gov_resp3$CountryName), FUN = mean)
gov_resp3 <- gov_resp3 %>%
mutate(
cname = Group.1,
cow = countrycode(cname, origin = "country.name", destination = "cown"),
chi3 = round(scale(chi),2),
) %>%
select(cow, chi3) %>%
arrange(cow)
rm (swiid)
swiid_summary$cow <- countrycode(swiid_summary$country, "country.name", "cown")
#some countries do not have data since 2016, take most recent available year
swiid_summary <- swiid_summary %>%
mutate(year = ifelse(country == "Algeria" & year == 2011 | country == "Brunei" & year == 1981 | country == "Bosnia and Herzegovina" & year == 2015 | country == "Grenada" & year == 2008 | country == "Guatemala" & year == 2014 | country == "Iceland" & year == 2015 | country == "India" & year == 2012 | country == "Japan" & year == 2015 | country == "Morocco" & year == 2014 | country == "Pakistan" & year == 2015 | country == "Philippines" & year == 2015 | country == "South Africa" & year == 2015 | country == "United Arab Emirates" & year == 2008 | country == "Venezuela" & year == 2015, 2016, year))
# trim S. Africa
swiid_summary$gini_disp <- ifelse(swiid_summary$country == "South Africa" & swiid_summary$year == 2016, 55, swiid_summary$gini_disp)
swiid_summary <- subset(swiid_summary, year >= 2016)
swiid_summary <- select(swiid_summary, cow, gini_disp)
swiid_summary <- aggregate(swiid_summary, by = list(swiid_summary$cow), FUN = mean, na.rm = T)
gini_disp <- select(swiid_summary, cow, gini_disp)
rm(swiid_summary)
gdp <- gdp %>%
mutate(
cow = countrycode(Country.Name, origin = "country.name", destination = "cown"),
gdp = X2019
) %>%
filter(cow %in% issp16dfa$cow) %>%
select(cow, gdp)
## Impute data for Venezuela (IMF report, estimated)
gdp[which(gdp$cow == 101),2] <- 2299.308
## Impute Taiwan (also from IMF report)
gdp[33,1] <- 713
gdp[33,2] <- 25873.37
# recode GDP to be in k
gdp$gdp <- gdp$gdp/1000
socp <- socp %>%
mutate(
country = ...2,
soc_spend = round(...19,2)
) %>%
select(country, soc_spend)
socp <- socp[complete.cases(socp$soc_spend),]
socp$cow <- countrycode(socp$country, "country.name","cown")
socp <- socp %>%
filter(cow %in% issp16dfa$cow) %>%
select(cow, soc_spend)
df <- left_join(issp16dfa, gov_resp1, by = "cow")
df <- left_join(df, gov_resp2, by = "cow")
df <- left_join(df, gov_resp3, by = "cow")
df <- left_join(df, betrack_av, by = "cow")
df <- left_join(df, dpm_stage1, by = "cow")
df <- left_join(df, dpm_stage2, by = "cow")
df <- left_join(df, dpm_stage3, by = "cow")
df <- left_join(df, gini_disp, by = "cow")
df <- left_join(df, gdp, by = "cow")
df <- left_join(df, socp, by = "cow")
## filter out Suriname
df <- df[-which(df$cow==115),]
## Descriptive tables
tab1 <- descr(df[,c("gov_author", "chi1", "chi2", "behave","gini_disp","dpm1","dpm2",
"gdp","soc_spend")],
show = c("n","mean", "sd","range"))
tab1[,1] <- c("Public Preferences", "Government Intervention - Outbreak Stage", "Government Intervention - Public Reaction Stage", "Public Behavior", "Gini", "Deaths per million - First stage", "Deaths per million - Second Stage", "GDP (k$) per capita", "Social Spending")
colnames(tab1) <- c("Variable", "N",  "Mean", "SD", "Range")
tab1[,c(3:4)] <- round(tab1[,c(3:4)],2)
htmlTable(tab1,rnames = FALSE)
## Correlation table
m11 <- lm(chi1 ~ gov_author, data = df)
m12 <- lm(chi1 ~ gov_author + dpm1, data = df)
m13 <- lm(chi1 ~ gov_author + dpm1 + gini_disp, data = df)
m14 <- lm(chi1 ~ gov_author + dpm1 + gini_disp + soc_spend, data = df)
m15 <- lm(chi1 ~ gov_author + dpm1 + gini_disp + soc_spend + gdp, data = df)
tab_model(m11, m12, m13, m14, m15, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M11", "M12","M13", "M14", "M15"), pred.labels = c("Intercept", "Public Preferences", "Deaths per Million", "Disposable Income Inequality (Gini)", "Social Spending", "GDP (k$, per capita)"))
## Construct the discrepancy score (original)
m11_old <- lm(chi1 ~ dpm1 + gov_author, data = df)
df$chi1_p <- predict.lm(m11_old, newdata = df)
df$gap1 <- round(df$chi1 - df$chi1_p,3)
## Check descriptive statistics
tab1.2 <- descr(df[,"gap1"], show = c("n", "mean", "sd", "range"))
tab1.2[,1] <- "Discrepancy Score"
colnames(tab1.2) <- c("Variable", "N",  "Mean", "SD", "Range")
tab1.2[,c(3:4)] <- round(tab1.2[,c(3:4)],2)
htmlTable(tab1.2)
## A categorical variable of the discrepancy score.
df$gap1_cat <- as.factor(ifelse(df$gap1 > 0, 1, 0))
## Alternative discrepancy score
df$chi1_pa <- predict.lm(m11, newdata = df)
df$gap1a <- round(df$chi1 - df$chi1_pa,3)
## Check descriptive statistics
tab1.3 <- descr(df[,"gap1a"], show = c("n", "mean", "sd", "range"))
tab1.3[,1] <- "Discrepancy Score"
colnames(tab1.3) <- c("Variable", "N",  "Mean", "SD", "Range")
tab1.3[,c(3:4)] <- round(tab1.3[,c(3:4)],2)
htmlTable(tab1.3)
## A categorical variable of the discrepancy score.
df$gap1a_cat <- as.factor(ifelse(df$gap1a > 0, 1, 0))
## Add discrepancy score to the descriptive table
tab1.4 <- descr(df[,c("gap1a","gap1a_cat")], show = c("n", "mean", "sd", "range"))
tab1.4[,1] <- c("Discrepancy Score", "Discrepancy Score (dich.)")
colnames(tab1.4) <- c("Variable", "N",  "Mean", "SD", "Range")
tab1.4[,c(3:4)] <- round(tab1.4[,c(3:4)],2)
tab1 <- rbind(tab1, tab1.4)
htmlTable(tab1)
m21 <- lm(behave ~  gap1a , data = df)
m22 <- lm(behave  ~  gap1a + chi2, data = df)
m23 <- lm(behave  ~ gap1a + chi2 + dpm2 , data = df)
m24 <- lm(behave  ~ gap1a + chi2 + dpm2 + gini_disp, data = df)
m25 <- lm(behave ~ gap1a + chi2 + dpm2 + gini_disp + soc_spend, data = df)
m26 <- lm(behave ~ gap1a + chi2 + dpm2 + gini_disp + soc_spend  + gdp, data = df)
tab_model(m21, m22, m23, m24, m25, m26, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M21", "M22","M23", "M24","M25", "M26"), pred.labels = c("Intercept", "Discrepancy Score - Outbreak Stage", "Government Intervention - Public Reaction Stage", "Deaths per Million",   "Disposable Income Inequality", "Social Spending", "GDP (k$, per capita)"),show.aic = TRUE, show.std = TRUE)
m31 <- lm(behave ~ gap1a_cat , data = df)
m32 <- lm(behave  ~ gap1a_cat + chi2, data = df)
m33 <- lm(behave  ~ gap1a_cat + chi2 + dpm2, data = df)
m34 <- lm(behave ~ gap1a_cat + chi2 + dpm2 + gini_disp, data = df)
m35 <- lm(behave ~ gap1a_cat + chi2 + dpm2 + gini_disp + soc_spend, data = df)
m36 <- lm(behave ~ gap1a_cat + chi2 + dpm2 + gini_disp + soc_spend + gdp, data = df)
tab_model(m31, m32, m33, m34, m35, m36, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M31", "M32","M33", "M34","M35", "M36"), pred.labels = c("Intercept", "Positive Discrepancy from Outbreak Stage", "Current Gov. Intervention", "Deaths per Million", "Disposable Income Inequality", "Social Spending", "GDP (k$, per capita)"))
m4a <- lm(chi3 ~ gov_author, data = df)
df$chi3_p <- predict.lm(m4a, newdata = df)
df$gap2 <- df$chi3 - df$chi3_p
m41 <- lm(behave ~ gap2, data = df)
m42 <- lm(behave ~ gap2 + chi2, data = df)
m43 <- lm(behave ~ gap2 + chi2 + dpm2 , data = df)
m44 <- lm(behave ~ gap2 + chi2 + dpm2 + gini_disp , data = df)
m45 <- lm(behave ~ gap2 + chi2 + dpm2 + gini_disp + soc_spend, data = df)
m46 <- lm(behave ~ gap2 + chi2 + dpm2 + gini_disp + soc_spend + gdp, data = df)
tab_model(m41, m42, m43, m44, m45, m46, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M41", "M42","M43", "M44","M45", "M46"), pred.labels = c("Intercept", "Discrepancy Score - Outbreak Stage", "Government Intervention - Public Reaction Stage", "Deaths per Million", "Disposable Income Inequality (Gini)", "Social Spending", "GDP (k$, per capita)"), show.aic = TRUE)
# Create partial correlation (predicted behave partialled out from chi2)
partial <- lm(behave ~ chi2, data = df)
df$behave_p <- predict(partial, newdata = df)
df$behave_partial <- df$behave - df$behave_p
# add country ISO 3c
df$iso <- countrycode(df$cow, "cown", "iso3c")
# fix Chile as outlier for better visualization (to the level of SWE)
df$gap1i <- ifelse(df$iso == "CHL", -1.65, df$gap1)
# fix Russia to the level of HRV
df$behave_partiali <- ifelse(df$iso == "RUS", -1.7, df$behave_partial)
agg_png(filename = "results/Fig3.png", res = 144, height = 800, width = 1000)
ggplot(df, aes(gap1i, behave_partiali, label = iso)) +
geom_smooth(method = "lm", color = "grey") +
geom_text_repel(aes(label = iso)) +
labs(x = "Less Relative Intervention  < ------                               ------ >  More Relative Intervention\nDiscrepancy Score", y = "Public Behaviors\nLess cautious  < ------                     ------ >  More cautious") +
theme_classic() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())
invisible(dev.off())
knitr::include_graphics("results/Fig3.png")
library(ggpubr)
df$iso <- as.factor(countrycode(df$cow, "cown","iso3c"))
## Scatter Plots (Figure 3)
sc1 <- ggscatter(df, x = "gov_author", y = "chi1", conf.int =  TRUE, size = 5) +
stat_cor(method = "pearson", size = 10, label.x = 3.5, label.y = -2) +
geom_smooth(method = lm, se = TRUE, fullrange = FALSE, aes(group = 1), color = "blue") +
geom_text_repel(aes(label = iso), size = 7) +
scale_color_discrete(name = "Country (ISO)") +
xlab(label = "Institutionalized Public Preferences") +
ylab(label = "Government Intervention in the Outbreak Stage") +
theme(axis.title = element_text(size = 24,face = "bold"),axis.text = element_text(size = 12))
sc2 <- ggscatter(df, x = "chi1_pa", y = "chi1", conf.int =  TRUE, size = 5) +
stat_cor(method = "pearson", size = 10, label.x = 1.5, label.y = -0.05) +
geom_smooth(method = lm, se = TRUE, fullrange = FALSE, aes(group = 1), color = "blue") +
geom_text_repel(aes(label = iso), size = 7) +
scale_color_discrete(name = "Country (ISO)") +
xlab(label = "Government Intervention 'Expected' by the Public") +
ylab(label = "Government Intervention in the Outbreak Stage") +
theme(axis.title = element_text(size = 24,face = "bold"),axis.text = element_text(size = 12))
sc3 <- ggscatter(df, x = "gap1a", y = "behave", conf.int =  TRUE, size = 5) +
stat_cor(method = "pearson", size = 10, label.x = 1.5, label.y = -2.5) +
geom_smooth(method = lm, se = TRUE, fullrange = FALSE, aes(group = 1), color = "blue") +
geom_text_repel(aes(label = iso), size = 7) +
scale_color_discrete(name = "Country (ISO)") +
xlab(label = "Discrepancy Score in the Outbreak Stage") +
ylab(label = "Public Behaviors in the Reaction Stage") +
theme(axis.title = element_text(size = 24,face = "bold"),axis.text = element_text(size = 12))
library(gridExtra)
agg_png(wdir("results/scatplots.png"), width = 2000, height =  1500)
layout_matrix <- matrix(c(1, 1, 2, 2, 4, 3, 3, 4), nrow = 2, byrow = TRUE)
grid.arrange(sc1, sc2, sc3, nrow = 2, layout_matrix = layout_matrix)
invisible(dev.off())
sc2
sc2 <- ggscatter(df, x = "chi1_pa", y = "chi1", conf.int =  TRUE, size = 5) +
stat_cor(method = "pearson", size = 10, label.x = 0.5, label.y = -0.05) +
geom_smooth(method = lm, se = TRUE, fullrange = FALSE, aes(group = 1), color = "blue") +
geom_text_repel(aes(label = iso), size = 7) +
scale_color_discrete(name = "Country (ISO)") +
xlab(label = "Government Intervention 'Expected' by the Public") +
ylab(label = "Government Intervention in the Outbreak Stage") +
theme(axis.title = element_text(size = 24,face = "bold"),axis.text = element_text(size = 12))
sc2
df$chi1_pa <- predict.lm(m11, newdata = df)
View(df)
df$gap1a <- round(df$chi1 - df$chi1_pa,3)
m11 <- lm(chi1 ~ gov_author, data = df)
df$chi1_pa <- predict.lm(m11, newdata = df)
sc2 <- ggscatter(df, x = "chi1_pa", y = "chi1", conf.int =  TRUE, size = 5) +
stat_cor(method = "pearson", size = 10, label.x = 0.5, label.y = -0.05) +
geom_smooth(method = lm, se = TRUE, fullrange = FALSE, aes(group = 1), color = "blue") +
geom_text_repel(aes(label = iso), size = 7) +
scale_color_discrete(name = "Country (ISO)") +
xlab(label = "Government Intervention 'Expected' by the Public") +
ylab(label = "Government Intervention in the Outbreak Stage") +
theme(axis.title = element_text(size = 24,face = "bold"),axis.text = element_text(size = 12))
sc2
summary(m11)
tab_model(m11, m12, m13, m14, m15, p.style = "stars", p.threshold = c(0.10, 0.05, 0.01), show.ci = F,  dv.labels = c("M11", "M12","M13", "M14", "M15"), pred.labels = c("Intercept", "Public Preferences", "Deaths per Million", "Disposable Income Inequality (Gini)", "Social Spending", "GDP (k$, per capita)"))
sc2 <- ggscatter(df, x = "chi1_pa", y = "chi1", conf.int =  TRUE, size = 5) +
stat_cor(method = "pearson", size = 10, label.x = 0.1, label.y = -0.05) +
geom_smooth(method = lm, se = TRUE, fullrange = FALSE, aes(group = 1), color = "blue") +
geom_text_repel(aes(label = iso), size = 7) +
scale_color_discrete(name = "Country (ISO)") +
xlab(label = "Government Intervention 'Expected' by the Public") +
ylab(label = "Government Intervention in the Outbreak Stage") +
theme(axis.title = element_text(size = 24,face = "bold"),axis.text = element_text(size = 12))
sc2
agg_png(wdir("results/scatplots.png"), width = 2000, height =  1500)
layout_matrix <- matrix(c(1, 1, 2, 2, 4, 3, 3, 4), nrow = 2, byrow = TRUE)
grid.arrange(sc1, sc2, sc3, nrow = 2, layout_matrix = layout_matrix)
invisible(dev.off())
sc2 <- ggscatter(df, x = "chi1_pa", y = "chi1", conf.int =  TRUE, size = 5) +
stat_cor(method = "pearson", size = 10, label.x = 0.1, label.y = -2) +
geom_smooth(method = lm, se = TRUE, fullrange = FALSE, aes(group = 1), color = "blue") +
geom_text_repel(aes(label = iso), size = 7) +
scale_color_discrete(name = "Country (ISO)") +
xlab(label = "Government Intervention 'Expected' by the Public") +
ylab(label = "Government Intervention in the Outbreak Stage") +
theme(axis.title = element_text(size = 24,face = "bold"),axis.text = element_text(size = 12))
agg_png(wdir("results/scatplots.png"), width = 2000, height =  1500)
layout_matrix <- matrix(c(1, 1, 2, 2, 4, 3, 3, 4), nrow = 2, byrow = TRUE)
grid.arrange(sc1, sc2, sc3, nrow = 2, layout_matrix = layout_matrix)
invisible(dev.off())
sc2 <- ggscatter(df, x = "chi1_pa", y = "chi1", conf.int =  TRUE, size = 5) +
stat_cor(method = "pearson", size = 10, label.x = 0.08, label.y = -2) +
geom_smooth(method = lm, se = TRUE, fullrange = FALSE, aes(group = 1), color = "blue") +
geom_text_repel(aes(label = iso), size = 7) +
scale_color_discrete(name = "Country (ISO)") +
xlab(label = "Government Intervention 'Expected' by the Public") +
ylab(label = "Government Intervention in the Outbreak Stage") +
theme(axis.title = element_text(size = 24,face = "bold"),axis.text = element_text(size = 12))
agg_png(wdir("results/scatplots.png"), width = 2000, height =  1500)
layout_matrix <- matrix(c(1, 1, 2, 2, 4, 3, 3, 4), nrow = 2, byrow = TRUE)
grid.arrange(sc1, sc2, sc3, nrow = 2, layout_matrix = layout_matrix)
invisible(dev.off())
